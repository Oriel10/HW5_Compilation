2022-06-20 16:19:37.295 INFO  [95138] [startCompiler@26] Start compiler
2022-06-20 16:19:37.296 INFO  [95138] [openScope@97] Open scope in line: 1
2022-06-20 16:19:37.297 INFO  [95138] [llvmGen::genInitialFuncs@134] Generating intial functions
2022-06-20 16:19:37.298 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: define void @printi(i32) {
2022-06-20 16:19:37.298 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command:     %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
2022-06-20 16:19:37.299 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command:     call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
2022-06-20 16:19:37.299 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command:     ret void
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: }
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: 
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: define void @print(i8*) {
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command:     %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command:     call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command:     ret void
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: }
2022-06-20 16:19:37.300 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: 
2022-06-20 16:19:37.300 DEBUG [95138] [yyparse@196] line: 11,  Type -> BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@92] type->token_type: BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@85] line: 11,  RetType -> Type
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@196] line: 11,  Type -> BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@92] type->token_type: BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@105] line: 11,  FormalDecl -> Type ID
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@196] line: 11,  Type -> BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@92] type->token_type: BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@105] line: 11,  FormalDecl -> Type ID
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@196] line: 11,  Type -> BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@92] type->token_type: BOOL
2022-06-20 16:19:37.301 DEBUG [95138] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@105] line: 11,  FormalDecl -> Type ID
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@98] line: 11,  FormalsList -> FormalDecl
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@100] line: 11,  FormalsList -> FormalDecl COMMA FormalsList
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@100] line: 11,  FormalsList -> FormalDecl COMMA FormalsList
2022-06-20 16:19:37.301 DEBUG [95138] [yyparse@94] line: 11,  Formals -> FormalsList
2022-06-20 16:19:37.301 INFO  [95138] [openScope@97] Open scope in line: 11
2022-06-20 16:19:37.301 INFO  [95138] [llvmGen::genFuncDecl@114] Generaing function declaration: "testOr"
2022-06-20 16:19:37.301 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: define i1 @testOr(i1, i1, i1) {
2022-06-20 16:19:37.301 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-20 16:19:37.301 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: 
2022-06-20 16:19:37.302 DEBUG [95138] [yyparse@207] line: 12,  Exp -> ID
2022-06-20 16:19:37.303 INFO  [95138] [Exp::Exp@525] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: i
2022-06-20 16:19:37.304 INFO  [95138] [llvmGen::genGetVar@213] Generating genGetVar commands
2022-06-20 16:19:37.304 INFO  [95138] [Exp::Exp@535] Register of i is: %0
2022-06-20 16:19:37.304 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br i1 %0, label @, label @
2022-06-20 16:19:37.305 DEBUG [95138] [yyparse@160] line: 12,  M -> Epsilone
2022-06-20 16:19:37.306 INFO  [95138] [openScope@97] Open scope in line: 12
2022-06-20 16:19:37.306 INFO  [95138] [openScope@97] Open scope in line: 12
2022-06-20 16:19:37.306 DEBUG [95138] [yyparse@211] line: 13,  Exp -> NUM
2022-06-20 16:19:37.306 INFO  [95138] [Exp::Exp@525] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 10
2022-06-20 16:19:37.306 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var0 = add i32 10, 0
2022-06-20 16:19:37.306 INFO  [95138] [llvmGen::setReg@75] %var0 = add i32 10, 0
2022-06-20 16:19:37.306 DEBUG [95138] [yyparse@185] line: 13,  ExpList -> Exp
2022-06-20 16:19:37.306 DEBUG [95138] [yyparse@178] line: 13,  Call -> ID LPAREN ExpList RPAREN
2022-06-20 16:19:37.306 INFO  [95138] [llvmGen::genCallFunc@276] Generating call function command of: printi
2022-06-20 16:19:37.306 INFO  [95138] [SymbolTable::getFuncRetTypeAndArgsTypesByName@85] Looking for the return type of printi
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: call void @printi(i32 %var0)
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@133] line: 13,  Statement -> Call SC
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@110] line: 13,  Statements -> Statement
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@122] line: 14,  Statement -> LBRACE Statements RBRACE
2022-06-20 16:19:37.307 INFO  [95138] [Statement::Statement@220] Statement -> LB Statements RB
2022-06-20 16:19:37.307 INFO  [95138] [closeScope@121] Close scope in line: 14
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@140] line: 15,  Statement -> IF LPAREN Exp RPAREN Statement
2022-06-20 16:19:37.307 INFO  [95138] [closeScope@121] Close scope in line: 15
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@110] line: 15,  Statements -> Statement
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@117] line: 15,  M2 -> Epsilone
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@217] line: 15,  Exp -> TRUE
2022-06-20 16:19:37.307 INFO  [95138] [Exp::Exp@525] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: true
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var1 = add i1 1, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::setReg@75] %var1 = add i1 1, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br i1 %var1, label @, label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@137] line: 15,  Statement -> RETURN Exp SC
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br label @
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br label @
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var2 = phi i1 [1, %label_24], [0, %label_26]
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: ret i1 %var2
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@112] line: 15,  Statements -> Statements Statement
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@79] line: 16,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: }

2022-06-20 16:19:37.307 INFO  [95138] [closeScope@121] Close scope in line: 16
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@87] line: 18,  RetType ->  VOID
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@92] line: 18,  Formals -> epsilon
2022-06-20 16:19:37.307 INFO  [95138] [openScope@97] Open scope in line: 19
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::genFuncDecl@114] Generaing function declaration: "main"
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: define void @main() {
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: 
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@196] line: 20,  Type -> BOOL
2022-06-20 16:19:37.307 DEBUG [95138] [Type::Type@92] type->token_type: BOOL
2022-06-20 16:19:37.307 DEBUG [95138] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@219] line: 20,  Exp -> FALSE
2022-06-20 16:19:37.307 INFO  [95138] [Exp::Exp@525] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: false
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var3 = add i1 0, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::setReg@75] %var3 = add i1 0, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br i1 %var3, label @, label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@117] line: 20,  M2 -> Epsilone
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@217] line: 20,  Exp -> TRUE
2022-06-20 16:19:37.307 INFO  [95138] [Exp::Exp@525] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: true
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var4 = add i1 1, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::setReg@75] %var4 = add i1 1, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br i1 %var4, label @, label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@219] line: 20,  Exp -> FALSE
2022-06-20 16:19:37.307 INFO  [95138] [Exp::Exp@525] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: false
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var5 = add i1 0, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::setReg@75] %var5 = add i1 0, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br i1 %var5, label @, label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@217] line: 20,  Exp -> TRUE
2022-06-20 16:19:37.307 INFO  [95138] [Exp::Exp@525] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: true
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var6 = add i1 1, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::setReg@75] %var6 = add i1 1, 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br i1 %var6, label @, label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@185] line: 20,  ExpList -> Exp
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@187] line: 20,  ExpList -> Exp COMMA ExpList
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@187] line: 20,  ExpList -> Exp COMMA ExpList
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@178] line: 20,  Call -> ID LPAREN ExpList RPAREN
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::genCallFunc@276] Generating call function command of: testOr
2022-06-20 16:19:37.307 INFO  [95138] [SymbolTable::getFuncRetTypeAndArgsTypesByName@85] Looking for the return type of testOr
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var7 = call i1 @testOr(i1 %var4, i1 %var5, i1 %var6)
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@209] line: 20,  Exp -> Call
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br i1 %var7, label @, label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@225] line: 20,  Exp -> Exp OR Exp
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@127] line: 20,  Statement -> Type ID ASSIGN Exp SC
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: 
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br label @
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br label @
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var8 = phi i1 [1, %label_47], [0, %label_49]
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::genStoreValInVar@252] Generating store command with: i, %var8
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: 
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var9 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::genGetElementPtr@172] %var9 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: %var10 = zext i1 %var8  to i32
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: store i32 %var10, i32* %var9
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@110] line: 20,  Statements -> Statement
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: br label @
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@117] line: 44,  M2 -> Epsilone
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@135] line: 44,  Statement -> RETURN SC
2022-06-20 16:19:37.307 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: ret void
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@112] line: 44,  Statements -> Statements Statement
2022-06-20 16:19:37.307 DEBUG [95138] [yyparse@79] line: 45,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-20 16:19:37.308 INFO  [95138] [llvmGen::llvmEmit@100] Emitting command: }

2022-06-20 16:19:37.308 INFO  [95138] [closeScope@121] Close scope in line: 45
2022-06-20 16:19:37.308 DEBUG [95138] [yyparse@70] line: 48,  Funcs -> epsilon
2022-06-20 16:19:37.308 DEBUG [95138] [yyparse@72] line: 48,  Funcs -> FuncDecl Funcs
2022-06-20 16:19:37.308 DEBUG [95138] [yyparse@72] line: 48,  Funcs -> FuncDecl Funcs
2022-06-20 16:19:37.308 DEBUG [95138] [yyparse@65] line: 48,  Program -> Funcs
2022-06-20 16:19:37.308 INFO  [95138] [endCompiler@34] Print global buffer
2022-06-20 16:19:37.308 INFO  [95138] [endCompiler@36] Print code buffer
2022-06-20 16:19:37.308 INFO  [95138] [closeScope@121] Close scope in line: 48
2022-06-20 16:19:37.308 INFO  [95138] [endCompiler@40] End compiler
