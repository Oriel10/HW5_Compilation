2022-06-26 10:31:07.464 INFO  [41140] [startCompiler@26] Start compiler
2022-06-26 10:31:07.471 INFO  [41140] [openScope@60] Open scope in line: 1
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::genInitialFuncs@181] Generating intial functions
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define void @printi(i32) {
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command:     %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command:     call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command:     ret void
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define void @print(i8*) {
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command:     %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command:     call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command:     ret void
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@205] line: 1,  Type -> INT
2022-06-26 10:31:07.471 DEBUG [41140] [Type::Type@92] type->token_type: INT
2022-06-26 10:31:07.471 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@85] line: 1,  RetType -> Type
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@205] line: 1,  Type -> INT
2022-06-26 10:31:07.471 DEBUG [41140] [Type::Type@92] type->token_type: INT
2022-06-26 10:31:07.471 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@105] line: 1,  FormalDecl -> Type ID
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@205] line: 1,  Type -> INT
2022-06-26 10:31:07.471 DEBUG [41140] [Type::Type@92] type->token_type: INT
2022-06-26 10:31:07.471 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@105] line: 1,  FormalDecl -> Type ID
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@98] line: 1,  FormalsList -> FormalDecl
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@100] line: 1,  FormalsList -> FormalDecl COMMA FormalsList
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@94] line: 1,  Formals -> FormalsList
2022-06-26 10:31:07.471 INFO  [41140] [openScope@60] Open scope in line: 1
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::genFuncDecl@161] Generaing function declaration: "max"
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define i32 @max(i32, i32) {
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@220] line: 2,  Exp -> ID
2022-06-26 10:31:07.471 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: a
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.471 INFO  [41140] [Exp::Exp@609] Register of a is: %0
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@220] line: 2,  Exp -> ID
2022-06-26 10:31:07.471 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: cc
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.471 INFO  [41140] [Exp::Exp@609] Register of cc is: %1
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@242] line: 2,  Exp -> Exp RELOP Exp
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var0 = icmp sge i32 %0, %1
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var0, label @, label @
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@160] line: 2,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.471 INFO  [41140] [openScope@60] Open scope in line: 2
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@220] line: 3,  Exp -> ID
2022-06-26 10:31:07.471 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: a
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.471 INFO  [41140] [Exp::Exp@609] Register of a is: %0
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@137] line: 3,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.471 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i32 %0
2022-06-26 10:31:07.471 DEBUG [41140] [yyparse@140] line: 4,  Statement -> IF LPAREN Exp RPAREN Statement
2022-06-26 10:31:07.471 INFO  [41140] [closeScope@84] Close scope in line: 4
2022-06-26 10:31:07.472 DEBUG [41140] [yyparse@110] line: 4,  Statements -> Statement
2022-06-26 10:31:07.472 DEBUG [41140] [yyparse@117] line: 4,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.472 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.472 DEBUG [41140] [yyparse@220] line: 4,  Exp -> ID
2022-06-26 10:31:07.472 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: cc
2022-06-26 10:31:07.472 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.472 INFO  [41140] [Exp::Exp@609] Register of cc is: %1
2022-06-26 10:31:07.472 DEBUG [41140] [yyparse@137] line: 4,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.472 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i32 %1
2022-06-26 10:31:07.472 DEBUG [41140] [yyparse@112] line: 4,  Statements -> Statements Statement
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@117] line: 6,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@205] line: 6,  Type -> INT
2022-06-26 10:31:07.473 DEBUG [41140] [Type::Type@92] type->token_type: INT
2022-06-26 10:31:07.473 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@224] line: 6,  Exp -> NUM
2022-06-26 10:31:07.473 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 42
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var1 = add i32 42, 0
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::setReg@75] %var1 = add i32 42, 0
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@127] line: 6,  Statement -> Type ID ASSIGN Exp SC
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::genStoreValInVar@301] Generating store command with: x, %var1
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var2 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::genGetElementPtr@219] %var2 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: store i32 %var1, i32* %var2
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@112] line: 6,  Statements -> Statements Statement
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@117] line: 7,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@224] line: 7,  Exp -> NUM
2022-06-26 10:31:07.473 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 42
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var3 = add i32 42, 0
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::setReg@75] %var3 = add i32 42, 0
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@137] line: 7,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i32 %var3
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@112] line: 7,  Statements -> Statements Statement
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@79] line: 8,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-26 10:31:07.473 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }

2022-06-26 10:31:07.473 INFO  [41140] [closeScope@84] Close scope in line: 8
2022-06-26 10:31:07.473 DEBUG [41140] [yyparse@207] line: 10,  Type -> BYTE
2022-06-26 10:31:07.473 DEBUG [41140] [Type::Type@92] type->token_type: BYTE
2022-06-26 10:31:07.474 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@85] line: 10,  RetType -> Type
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@207] line: 10,  Type -> BYTE
2022-06-26 10:31:07.474 DEBUG [41140] [Type::Type@92] type->token_type: BYTE
2022-06-26 10:31:07.474 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@105] line: 10,  FormalDecl -> Type ID
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@207] line: 10,  Type -> BYTE
2022-06-26 10:31:07.474 DEBUG [41140] [Type::Type@92] type->token_type: BYTE
2022-06-26 10:31:07.474 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@105] line: 10,  FormalDecl -> Type ID
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@98] line: 10,  FormalsList -> FormalDecl
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@100] line: 10,  FormalsList -> FormalDecl COMMA FormalsList
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@94] line: 10,  Formals -> FormalsList
2022-06-26 10:31:07.474 INFO  [41140] [openScope@60] Open scope in line: 11
2022-06-26 10:31:07.474 INFO  [41140] [llvmGen::genFuncDecl@161] Generaing function declaration: "maxb"
2022-06-26 10:31:07.474 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define i8 @maxb(i8, i8) {
2022-06-26 10:31:07.474 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-26 10:31:07.474 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.474 DEBUG [41140] [yyparse@220] line: 12,  Exp -> ID
2022-06-26 10:31:07.474 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: a
2022-06-26 10:31:07.474 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.474 INFO  [41140] [Exp::Exp@609] Register of a is: %0
2022-06-26 10:31:07.476 DEBUG [41140] [yyparse@220] line: 12,  Exp -> ID
2022-06-26 10:31:07.481 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: bb
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.481 INFO  [41140] [Exp::Exp@609] Register of bb is: %1
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@242] line: 12,  Exp -> Exp RELOP Exp
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var4 = icmp ult i8 %0, %1
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var4, label @, label @
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@160] line: 12,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.481 INFO  [41140] [openScope@60] Open scope in line: 12
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@205] line: 13,  Type -> INT
2022-06-26 10:31:07.481 DEBUG [41140] [Type::Type@92] type->token_type: INT
2022-06-26 10:31:07.481 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@125] line: 13,  Statement -> Type ID SC
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::genStoreValInVar@301] Generating store command with: x, 
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var5 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::genGetElementPtr@219] %var5 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: store i32 0, i32* %var5
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@171] line: 14,  ElseMarker -> Epsilone
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.481 INFO  [41140] [closeScope@84] Close scope in line: 14
2022-06-26 10:31:07.481 INFO  [41140] [openScope@60] Open scope in line: 14
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@220] line: 15,  Exp -> ID
2022-06-26 10:31:07.481 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: a
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.481 INFO  [41140] [Exp::Exp@609] Register of a is: %0
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@137] line: 15,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i8 %0
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@144] line: 15,  Statement -> IF LPAREN Exp RPAREN Statement ELSE Statement
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.481 INFO  [41140] [closeScope@84] Close scope in line: 15
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@110] line: 15,  Statements -> Statement
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@117] line: 16,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@220] line: 16,  Exp -> ID
2022-06-26 10:31:07.481 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: bb
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.481 INFO  [41140] [Exp::Exp@609] Register of bb is: %1
2022-06-26 10:31:07.481 DEBUG [41140] [yyparse@137] line: 16,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.481 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i8 %1
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@112] line: 16,  Statements -> Statements Statement
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@79] line: 17,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-26 10:31:07.482 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }

2022-06-26 10:31:07.482 INFO  [41140] [closeScope@84] Close scope in line: 17
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@209] line: 19,  Type -> BOOL
2022-06-26 10:31:07.482 DEBUG [41140] [Type::Type@92] type->token_type: BOOL
2022-06-26 10:31:07.482 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 0
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@85] line: 19,  RetType -> Type
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@205] line: 19,  Type -> INT
2022-06-26 10:31:07.482 DEBUG [41140] [Type::Type@92] type->token_type: INT
2022-06-26 10:31:07.482 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@105] line: 19,  FormalDecl -> Type ID
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@205] line: 19,  Type -> INT
2022-06-26 10:31:07.482 DEBUG [41140] [Type::Type@92] type->token_type: INT
2022-06-26 10:31:07.482 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@105] line: 19,  FormalDecl -> Type ID
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@98] line: 19,  FormalsList -> FormalDecl
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@100] line: 19,  FormalsList -> FormalDecl COMMA FormalsList
2022-06-26 10:31:07.482 DEBUG [41140] [yyparse@94] line: 19,  Formals -> FormalsList
2022-06-26 10:31:07.482 INFO  [41140] [openScope@60] Open scope in line: 20
2022-06-26 10:31:07.482 INFO  [41140] [llvmGen::genFuncDecl@161] Generaing function declaration: "isFirstBigger"
2022-06-26 10:31:07.482 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define i1 @isFirstBigger(i32, i32) {
2022-06-26 10:31:07.482 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-26 10:31:07.488 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@220] line: 21,  Exp -> ID
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: a
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@609] Register of a is: %0
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@220] line: 21,  Exp -> ID
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: bb
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@609] Register of bb is: %1
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@242] line: 21,  Exp -> Exp RELOP Exp
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var6 = icmp sge i32 %0, %1
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var6, label @, label @
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@160] line: 21,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.489 INFO  [41140] [openScope@60] Open scope in line: 21
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@220] line: 22,  Exp -> ID
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: a
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@609] Register of a is: %0
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@220] line: 22,  Exp -> ID
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: bb
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@609] Register of bb is: %1
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@240] line: 22,  Exp -> Exp RELOP Exp
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var7 = icmp ne i32 %0, %1
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var7, label @, label @
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@160] line: 22,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.489 INFO  [41140] [openScope@60] Open scope in line: 22
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@230] line: 23,  Exp -> TRUE
2022-06-26 10:31:07.489 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: true
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var8 = add i1 1, 0
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::setReg@75] %var8 = add i1 1, 0
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var8, label @, label @
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@137] line: 23,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var9 = phi i1 [1, %label_61], [0, %label_63]
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i1 %var9
2022-06-26 10:31:07.489 DEBUG [41140] [yyparse@171] line: 24,  ElseMarker -> Epsilone
2022-06-26 10:31:07.489 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.489 INFO  [41140] [closeScope@84] Close scope in line: 24
2022-06-26 10:31:07.489 INFO  [41140] [openScope@60] Open scope in line: 24
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@232] line: 25,  Exp -> FALSE
2022-06-26 10:31:07.490 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: false
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var10 = add i1 0, 0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::setReg@75] %var10 = add i1 0, 0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var10, label @, label @
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@137] line: 25,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var11 = phi i1 [1, %label_72], [0, %label_74]
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i1 %var11
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@144] line: 25,  Statement -> IF LPAREN Exp RPAREN Statement ELSE Statement
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [closeScope@84] Close scope in line: 25
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@171] line: 26,  ElseMarker -> Epsilone
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [closeScope@84] Close scope in line: 26
2022-06-26 10:31:07.490 INFO  [41140] [openScope@60] Open scope in line: 26
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@232] line: 27,  Exp -> FALSE
2022-06-26 10:31:07.490 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: false
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var12 = add i1 0, 0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::setReg@75] %var12 = add i1 0, 0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var12, label @, label @
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@137] line: 27,  Statement -> RETURN Exp SC
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var13 = phi i1 [1, %label_84], [0, %label_86]
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i1 %var13
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@144] line: 27,  Statement -> IF LPAREN Exp RPAREN Statement ELSE Statement
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [closeScope@84] Close scope in line: 27
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@110] line: 27,  Statements -> Statement
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@79] line: 28,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret i1 0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }

2022-06-26 10:31:07.490 INFO  [41140] [closeScope@84] Close scope in line: 28
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@87] line: 30,  RetType ->  VOID
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@209] line: 30,  Type -> BOOL
2022-06-26 10:31:07.490 DEBUG [41140] [Type::Type@92] type->token_type: BOOL
2022-06-26 10:31:07.490 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 0
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@105] line: 30,  FormalDecl -> Type ID
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@98] line: 30,  FormalsList -> FormalDecl
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@94] line: 30,  Formals -> FormalsList
2022-06-26 10:31:07.490 INFO  [41140] [openScope@60] Open scope in line: 31
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::genFuncDecl@161] Generaing function declaration: "printStatement"
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define void @printStatement(i1) {
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@228] line: 32,  Exp -> STRING
2022-06-26 10:31:07.490 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "I heart Compi..."
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var15 = getelementptr [17 x i8], [17 x i8]* @var14 , i32 0, i32 0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::genGetElementPtr@219] %var15 = getelementptr [17 x i8], [17 x i8]* @var14 , i32 0, i32 0
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@189] line: 32,  ExpList -> Exp
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@182] line: 32,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var15)
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@133] line: 32,  Statement -> Call SC
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@110] line: 32,  Statements -> Statement
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@117] line: 33,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@220] line: 33,  Exp -> ID
2022-06-26 10:31:07.490 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: printPunch
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.490 INFO  [41140] [Exp::Exp@609] Register of printPunch is: %0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %0, label @, label @
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@234] line: 33,  Exp -> NOT Exp
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@160] line: 33,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.490 INFO  [41140] [openScope@60] Open scope in line: 33
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@135] line: 34,  Statement -> RETURN SC
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@140] line: 35,  Statement -> IF LPAREN Exp RPAREN Statement
2022-06-26 10:31:07.490 INFO  [41140] [closeScope@84] Close scope in line: 35
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@112] line: 35,  Statements -> Statements Statement
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@117] line: 35,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@228] line: 35,  Exp -> STRING
2022-06-26 10:31:07.490 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "NOT!"
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var17 = getelementptr [5 x i8], [5 x i8]* @var16 , i32 0, i32 0
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::genGetElementPtr@219] %var17 = getelementptr [5 x i8], [5 x i8]* @var16 , i32 0, i32 0
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@189] line: 35,  ExpList -> Exp
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@182] line: 35,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var17)
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@133] line: 35,  Statement -> Call SC
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@112] line: 35,  Statements -> Statements Statement
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@79] line: 36,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.490 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }

2022-06-26 10:31:07.490 INFO  [41140] [closeScope@84] Close scope in line: 36
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@87] line: 38,  RetType ->  VOID
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@209] line: 38,  Type -> BOOL
2022-06-26 10:31:07.490 DEBUG [41140] [Type::Type@92] type->token_type: BOOL
2022-06-26 10:31:07.490 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 0
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@105] line: 38,  FormalDecl -> Type ID
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@98] line: 38,  FormalsList -> FormalDecl
2022-06-26 10:31:07.490 DEBUG [41140] [yyparse@94] line: 38,  Formals -> FormalsList
2022-06-26 10:31:07.491 INFO  [41140] [openScope@60] Open scope in line: 39
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genFuncDecl@161] Generaing function declaration: "printStatement2"
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define void @printStatement2(i1) {
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@228] line: 40,  Exp -> STRING
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "I heart Compi..."
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var19 = getelementptr [17 x i8], [17 x i8]* @var18 , i32 0, i32 0
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genGetElementPtr@219] %var19 = getelementptr [17 x i8], [17 x i8]* @var18 , i32 0, i32 0
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@189] line: 40,  ExpList -> Exp
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@182] line: 40,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var19)
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@133] line: 40,  Statement -> Call SC
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@110] line: 40,  Statements -> Statement
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@117] line: 41,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@220] line: 41,  Exp -> ID
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: printPunch
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@609] Register of printPunch is: %0
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %0, label @, label @
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@160] line: 41,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.491 INFO  [41140] [openScope@60] Open scope in line: 41
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@228] line: 42,  Exp -> STRING
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "NOT!"
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var21 = getelementptr [5 x i8], [5 x i8]* @var20 , i32 0, i32 0
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genGetElementPtr@219] %var21 = getelementptr [5 x i8], [5 x i8]* @var20 , i32 0, i32 0
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@189] line: 42,  ExpList -> Exp
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@182] line: 42,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var21)
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@133] line: 42,  Statement -> Call SC
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@171] line: 43,  ElseMarker -> Epsilone
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.491 INFO  [41140] [closeScope@84] Close scope in line: 43
2022-06-26 10:31:07.491 INFO  [41140] [openScope@60] Open scope in line: 43
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@135] line: 44,  Statement -> RETURN SC
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@144] line: 44,  Statement -> IF LPAREN Exp RPAREN Statement ELSE Statement
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.491 INFO  [41140] [closeScope@84] Close scope in line: 44
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@112] line: 44,  Statements -> Statements Statement
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@79] line: 45,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }

2022-06-26 10:31:07.491 INFO  [41140] [closeScope@84] Close scope in line: 45
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@87] line: 47,  RetType ->  VOID
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@209] line: 47,  Type -> BOOL
2022-06-26 10:31:07.491 DEBUG [41140] [Type::Type@92] type->token_type: BOOL
2022-06-26 10:31:07.491 DEBUG [41140] [Type::Type@93] types_dict[type->token_type]: 0
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@105] line: 47,  FormalDecl -> Type ID
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@98] line: 47,  FormalsList -> FormalDecl
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@94] line: 47,  Formals -> FormalsList
2022-06-26 10:31:07.491 INFO  [41140] [openScope@60] Open scope in line: 48
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genFuncDecl@161] Generaing function declaration: "printStatement3"
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define void @printStatement3(i1) {
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@228] line: 49,  Exp -> STRING
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "I heart Compi..."
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var23 = getelementptr [17 x i8], [17 x i8]* @var22 , i32 0, i32 0
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genGetElementPtr@219] %var23 = getelementptr [17 x i8], [17 x i8]* @var22 , i32 0, i32 0
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@189] line: 49,  ExpList -> Exp
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@182] line: 49,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var23)
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@133] line: 49,  Statement -> Call SC
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@110] line: 49,  Statements -> Statement
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@117] line: 50,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@220] line: 50,  Exp -> ID
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: printPunch
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genGetVar@263] Generating genGetVar commands
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@609] Register of printPunch is: %0
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %0, label @, label @
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@160] line: 50,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.491 INFO  [41140] [openScope@60] Open scope in line: 50
2022-06-26 10:31:07.491 INFO  [41140] [openScope@60] Open scope in line: 50
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@228] line: 51,  Exp -> STRING
2022-06-26 10:31:07.491 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "NOT!"
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var25 = getelementptr [5 x i8], [5 x i8]* @var24 , i32 0, i32 0
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genGetElementPtr@219] %var25 = getelementptr [5 x i8], [5 x i8]* @var24 , i32 0, i32 0
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@189] line: 51,  ExpList -> Exp
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@182] line: 51,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var25)
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@133] line: 51,  Statement -> Call SC
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@110] line: 51,  Statements -> Statement
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@117] line: 52,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@135] line: 52,  Statement -> RETURN SC
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@112] line: 52,  Statements -> Statements Statement
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@122] line: 53,  Statement -> LBRACE Statements RBRACE
2022-06-26 10:31:07.491 INFO  [41140] [closeScope@84] Close scope in line: 53
2022-06-26 10:31:07.491 DEBUG [41140] [yyparse@171] line: 54,  ElseMarker -> Epsilone
2022-06-26 10:31:07.491 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.491 INFO  [41140] [closeScope@84] Close scope in line: 54
2022-06-26 10:31:07.491 INFO  [41140] [openScope@60] Open scope in line: 54
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@135] line: 55,  Statement -> RETURN SC
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@144] line: 55,  Statement -> IF LPAREN Exp RPAREN Statement ELSE Statement
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.492 INFO  [41140] [closeScope@84] Close scope in line: 55
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@112] line: 55,  Statements -> Statements Statement
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@117] line: 56,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@228] line: 56,  Exp -> STRING
2022-06-26 10:31:07.492 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "I really do!"
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var27 = getelementptr [13 x i8], [13 x i8]* @var26 , i32 0, i32 0
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genGetElementPtr@219] %var27 = getelementptr [13 x i8], [13 x i8]* @var26 , i32 0, i32 0
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@189] line: 56,  ExpList -> Exp
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@182] line: 56,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var27)
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@133] line: 56,  Statement -> Call SC
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@112] line: 56,  Statements -> Statements Statement
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@79] line: 57,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }

2022-06-26 10:31:07.492 INFO  [41140] [closeScope@84] Close scope in line: 57
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@87] line: 59,  RetType ->  VOID
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@92] line: 59,  Formals -> epsilon
2022-06-26 10:31:07.492 INFO  [41140] [openScope@60] Open scope in line: 60
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genFuncDecl@161] Generaing function declaration: "main"
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: define void @main() {
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: 
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@228] line: 61,  Exp -> STRING
2022-06-26 10:31:07.492 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "max of 3 and 2 is "
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var29 = getelementptr [19 x i8], [19 x i8]* @var28 , i32 0, i32 0
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genGetElementPtr@219] %var29 = getelementptr [19 x i8], [19 x i8]* @var28 , i32 0, i32 0
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@189] line: 61,  ExpList -> Exp
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@182] line: 61,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var29)
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@133] line: 61,  Statement -> Call SC
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@110] line: 61,  Statements -> Statement
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@117] line: 62,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@224] line: 62,  Exp -> NUM
2022-06-26 10:31:07.492 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 3
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var30 = add i32 3, 0
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::setReg@75] %var30 = add i32 3, 0
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@196] line: 62,  ExpComma -> Exp COMMA
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@224] line: 62,  Exp -> NUM
2022-06-26 10:31:07.492 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 2
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var31 = add i32 2, 0
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::setReg@75] %var31 = add i32 2, 0
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@189] line: 62,  ExpList -> Exp
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@191] line: 62,  ExpList -> Exp COMMA ExpList
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@182] line: 62,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: max
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var32 = call i32 @max(i32 %var30, i32 %var31)
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@222] line: 62,  Exp -> Call
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@189] line: 62,  ExpList -> Exp
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@182] line: 62,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: printi
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @printi(i32 %var32)
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@133] line: 62,  Statement -> Call SC
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@112] line: 62,  Statements -> Statements Statement
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@117] line: 63,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@228] line: 63,  Exp -> STRING
2022-06-26 10:31:07.492 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "max of 3b and 2b is "
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var34 = getelementptr [21 x i8], [21 x i8]* @var33 , i32 0, i32 0
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genGetElementPtr@219] %var34 = getelementptr [21 x i8], [21 x i8]* @var33 , i32 0, i32 0
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@189] line: 63,  ExpList -> Exp
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@182] line: 63,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.492 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var34)
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@133] line: 63,  Statement -> Call SC
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@112] line: 63,  Statements -> Statements Statement
2022-06-26 10:31:07.492 DEBUG [41140] [yyparse@117] line: 64,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.494 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.494 DEBUG [41140] [yyparse@226] line: 64,  Exp -> NUM B
2022-06-26 10:31:07.494 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var35 = add i8 3, 0
2022-06-26 10:31:07.501 INFO  [41140] [llvmGen::setReg@75] %var35 = add i8 3, 0
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@196] line: 64,  ExpComma -> Exp COMMA
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@226] line: 64,  Exp -> NUM B
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var36 = add i8 2, 0
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::setReg@75] %var36 = add i8 2, 0
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@189] line: 64,  ExpList -> Exp
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@191] line: 64,  ExpList -> Exp COMMA ExpList
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@182] line: 64,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: maxb
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var37 = call i8 @maxb(i8 %var35, i8 %var36)
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@222] line: 64,  Exp -> Call
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@189] line: 64,  ExpList -> Exp
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@182] line: 64,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var38 = zext i8 %var37  to i32
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: printi
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @printi(i32 %var38)
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@133] line: 64,  Statement -> Call SC
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@112] line: 64,  Statements -> Statements Statement
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@117] line: 65,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@228] line: 65,  Exp -> STRING
2022-06-26 10:31:07.502 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "Is 3 really bigger then 2?"
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var40 = getelementptr [27 x i8], [27 x i8]* @var39 , i32 0, i32 0
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::genGetElementPtr@219] %var40 = getelementptr [27 x i8], [27 x i8]* @var39 , i32 0, i32 0
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@189] line: 65,  ExpList -> Exp
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@182] line: 65,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.502 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var40)
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@133] line: 65,  Statement -> Call SC
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@112] line: 65,  Statements -> Statements Statement
2022-06-26 10:31:07.502 DEBUG [41140] [yyparse@117] line: 66,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@224] line: 66,  Exp -> NUM
2022-06-26 10:31:07.509 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 3
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var41 = add i32 3, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::setReg@75] %var41 = add i32 3, 0
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@196] line: 66,  ExpComma -> Exp COMMA
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@224] line: 66,  Exp -> NUM
2022-06-26 10:31:07.509 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 2
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var42 = add i32 2, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::setReg@75] %var42 = add i32 2, 0
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@189] line: 66,  ExpList -> Exp
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@191] line: 66,  ExpList -> Exp COMMA ExpList
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@182] line: 66,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: isFirstBigger
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var43 = call i1 @isFirstBigger(i32 %var41, i32 %var42)
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@222] line: 66,  Exp -> Call
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var43, label @, label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@160] line: 66,  IfWhileMarker -> Epsilone
2022-06-26 10:31:07.509 INFO  [41140] [openScope@60] Open scope in line: 66
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@228] line: 67,  Exp -> STRING
2022-06-26 10:31:07.509 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "yes!"
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var45 = getelementptr [5 x i8], [5 x i8]* @var44 , i32 0, i32 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genGetElementPtr@219] %var45 = getelementptr [5 x i8], [5 x i8]* @var44 , i32 0, i32 0
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@189] line: 67,  ExpList -> Exp
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@182] line: 67,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var45)
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@133] line: 67,  Statement -> Call SC
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@171] line: 68,  ElseMarker -> Epsilone
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [closeScope@84] Close scope in line: 68
2022-06-26 10:31:07.509 INFO  [41140] [openScope@60] Open scope in line: 68
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@228] line: 69,  Exp -> STRING
2022-06-26 10:31:07.509 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: "no!"
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var47 = getelementptr [4 x i8], [4 x i8]* @var46 , i32 0, i32 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genGetElementPtr@219] %var47 = getelementptr [4 x i8], [4 x i8]* @var46 , i32 0, i32 0
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@189] line: 69,  ExpList -> Exp
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@182] line: 69,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: print
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @print(i8* %var47)
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@133] line: 69,  Statement -> Call SC
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@144] line: 69,  Statement -> IF LPAREN Exp RPAREN Statement ELSE Statement
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [closeScope@84] Close scope in line: 69
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@112] line: 69,  Statements -> Statements Statement
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@117] line: 70,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@232] line: 70,  Exp -> FALSE
2022-06-26 10:31:07.509 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: false
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var48 = add i1 0, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::setReg@75] %var48 = add i1 0, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var48, label @, label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@189] line: 70,  ExpList -> Exp
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var49 = phi i1 [1, %label_203], [0, %label_205]
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@182] line: 70,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: printStatement
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @printStatement(i1 %var49)
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@133] line: 70,  Statement -> Call SC
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@112] line: 70,  Statements -> Statements Statement
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@117] line: 71,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@232] line: 71,  Exp -> FALSE
2022-06-26 10:31:07.509 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: false
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var50 = add i1 0, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::setReg@75] %var50 = add i1 0, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var50, label @, label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@189] line: 71,  ExpList -> Exp
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var51 = phi i1 [1, %label_214], [0, %label_216]
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@182] line: 71,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: printStatement2
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @printStatement2(i1 %var51)
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@133] line: 71,  Statement -> Call SC
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@112] line: 71,  Statements -> Statements Statement
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@117] line: 72,  NextInstMarker -> Epsilone
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@230] line: 72,  Exp -> TRUE
2022-06-26 10:31:07.509 INFO  [41140] [Exp::Exp@599] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: true
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var52 = add i1 1, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::setReg@75] %var52 = add i1 1, 0
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br i1 %var52, label @, label @
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@189] line: 72,  ExpList -> Exp
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: %var53 = phi i1 [1, %label_225], [0, %label_227]
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@182] line: 72,  Call -> ID LPAREN ExpList RPAREN
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::genCallFunc@325] Generating call function command of: printStatement3
2022-06-26 10:31:07.509 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: call void @printStatement3(i1 %var53)
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@133] line: 72,  Statement -> Call SC
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@112] line: 72,  Statements -> Statements Statement
2022-06-26 10:31:07.509 DEBUG [41140] [yyparse@79] line: 73,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-26 10:31:07.510 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: br label @
2022-06-26 10:31:07.510 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: ret void
2022-06-26 10:31:07.510 INFO  [41140] [llvmGen::llvmEmit@140] Emitting command: }

2022-06-26 10:31:07.510 INFO  [41140] [closeScope@84] Close scope in line: 73
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@70] line: 73,  Funcs -> epsilon
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@72] line: 73,  Funcs -> FuncDecl Funcs
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@72] line: 73,  Funcs -> FuncDecl Funcs
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@72] line: 73,  Funcs -> FuncDecl Funcs
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@72] line: 73,  Funcs -> FuncDecl Funcs
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@72] line: 73,  Funcs -> FuncDecl Funcs
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@72] line: 73,  Funcs -> FuncDecl Funcs
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@72] line: 73,  Funcs -> FuncDecl Funcs
2022-06-26 10:31:07.510 DEBUG [41140] [yyparse@65] line: 73,  Program -> Funcs
2022-06-26 10:31:07.510 INFO  [41140] [endCompiler@34] Print global buffer
2022-06-26 10:31:07.510 INFO  [41140] [endCompiler@36] Print code buffer
2022-06-26 10:31:07.510 INFO  [41140] [closeScope@84] Close scope in line: 73
2022-06-26 10:31:07.510 INFO  [41140] [endCompiler@40] End compiler
