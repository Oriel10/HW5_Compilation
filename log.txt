2022-06-21 13:12:35.706 INFO  [40814] [startCompiler@26] Start compiler
2022-06-21 13:12:35.707 INFO  [40814] [openScope@60] Open scope in line: 1
2022-06-21 13:12:35.708 INFO  [40814] [llvmGen::genInitialFuncs@184] Generating intial functions
2022-06-21 13:12:35.709 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: define void @printi(i32) {
2022-06-21 13:12:35.709 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command:     %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
2022-06-21 13:12:35.709 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command:     call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
2022-06-21 13:12:35.709 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command:     ret void
2022-06-21 13:12:35.709 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: }
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: define void @print(i8*) {
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command:     %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command:     call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command:     ret void
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: }
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@87] line: 1,  RetType ->  VOID
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@201] line: 1,  Type -> INT
2022-06-21 13:12:35.710 DEBUG [40814] [Type::Type@92] type->token_type: INT
2022-06-21 13:12:35.710 DEBUG [40814] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@105] line: 1,  FormalDecl -> Type ID
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@201] line: 1,  Type -> INT
2022-06-21 13:12:35.710 DEBUG [40814] [Type::Type@92] type->token_type: INT
2022-06-21 13:12:35.710 DEBUG [40814] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@105] line: 1,  FormalDecl -> Type ID
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@203] line: 1,  Type -> BYTE
2022-06-21 13:12:35.710 DEBUG [40814] [Type::Type@92] type->token_type: BYTE
2022-06-21 13:12:35.710 DEBUG [40814] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@105] line: 1,  FormalDecl -> Type ID
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@98] line: 1,  FormalsList -> FormalDecl
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@100] line: 1,  FormalsList -> FormalDecl COMMA FormalsList
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@100] line: 1,  FormalsList -> FormalDecl COMMA FormalsList
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@94] line: 1,  Formals -> FormalsList
2022-06-21 13:12:35.710 INFO  [40814] [openScope@60] Open scope in line: 1
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::genFuncDecl@164] Generaing function declaration: "Func"
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: define void @Func(i32, i32, i8) {
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@216] line: 2,  Exp -> ID
2022-06-21 13:12:35.710 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: i
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::genGetVar@266] Generating genGetVar commands
2022-06-21 13:12:35.710 INFO  [40814] [Exp::Exp@632] Register of i is: %0
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@189] line: 2,  ExpList -> Exp
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@182] line: 2,  Call -> ID LPAREN ExpList RPAREN
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::genCallFunc@329] Generating call function command of: printi
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: call void @printi(i32 %0)
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@133] line: 2,  Statement -> Call SC
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@110] line: 2,  Statements -> Statement
2022-06-21 13:12:35.710 DEBUG [40814] [yyparse@117] line: 4,  NextInstMarker -> Epsilone
2022-06-21 13:12:35.710 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@216] line: 4,  Exp -> ID
2022-06-21 13:12:35.711 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: k
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::genGetVar@266] Generating genGetVar commands
2022-06-21 13:12:35.711 INFO  [40814] [Exp::Exp@632] Register of k is: %1
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@189] line: 4,  ExpList -> Exp
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@182] line: 4,  Call -> ID LPAREN ExpList RPAREN
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::genCallFunc@329] Generating call function command of: printi
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: call void @printi(i32 %1)
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@133] line: 4,  Statement -> Call SC
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@112] line: 4,  Statements -> Statements Statement
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@117] line: 6,  NextInstMarker -> Epsilone
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@216] line: 6,  Exp -> ID
2022-06-21 13:12:35.711 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: c
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::genGetVar@266] Generating genGetVar commands
2022-06-21 13:12:35.711 INFO  [40814] [Exp::Exp@632] Register of c is: %2
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@189] line: 6,  ExpList -> Exp
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@182] line: 6,  Call -> ID LPAREN ExpList RPAREN
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::genCallFunc@329] Generating call function command of: printi
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: call void @printi(i32 %2)
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@133] line: 6,  Statement -> Call SC
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@112] line: 6,  Statements -> Statements Statement
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@79] line: 7,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: ret void
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: }

2022-06-21 13:12:35.711 INFO  [40814] [closeScope@84] Close scope in line: 7
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@87] line: 8,  RetType ->  VOID
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@92] line: 8,  Formals -> epsilon
2022-06-21 13:12:35.711 INFO  [40814] [openScope@60] Open scope in line: 8
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::genFuncDecl@164] Generaing function declaration: "maxTestsPassMultipleParametersToFunc"
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: define void @maxTestsPassMultipleParametersToFunc() {
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@201] line: 9,  Type -> INT
2022-06-21 13:12:35.711 DEBUG [40814] [Type::Type@92] type->token_type: INT
2022-06-21 13:12:35.711 DEBUG [40814] [Type::Type@93] types_dict[type->token_type]: 2
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@220] line: 9,  Exp -> NUM
2022-06-21 13:12:35.711 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 33
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var0 = add i32 33, 0
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::setReg@75] %var0 = add i32 33, 0
2022-06-21 13:12:35.711 DEBUG [40814] [yyparse@127] line: 9,  Statement -> Type ID ASSIGN Exp SC
2022-06-21 13:12:35.711 INFO  [40814] [llvmGen::genStoreValInVar@305] Generating store command with: t, %var0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var1 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetElementPtr@222] %var1 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: store i32 %var0, i32* %var1
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@110] line: 9,  Statements -> Statement
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@117] line: 10,  NextInstMarker -> Epsilone
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@203] line: 10,  Type -> BYTE
2022-06-21 13:12:35.712 DEBUG [40814] [Type::Type@92] type->token_type: BYTE
2022-06-21 13:12:35.712 DEBUG [40814] [Type::Type@93] types_dict[type->token_type]: 1
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@222] line: 10,  Exp -> NUM B
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var2 = add i8 3, 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::setReg@75] %var2 = add i8 3, 0
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@127] line: 10,  Statement -> Type ID ASSIGN Exp SC
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genStoreValInVar@305] Generating store command with: s, %var2
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var3 = getelementptr i32, i32* %frame_ptr, i32 1
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetElementPtr@222] %var3 = getelementptr i32, i32* %frame_ptr, i32 1
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var4 = zext i8 %var2  to i32
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: store i32 %var4, i32* %var3
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@112] line: 10,  Statements -> Statements Statement
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@117] line: 11,  NextInstMarker -> Epsilone
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@220] line: 11,  Exp -> NUM
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 8
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var5 = add i32 8, 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::setReg@75] %var5 = add i32 8, 0
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@220] line: 11,  Exp -> NUM
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 2
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var6 = add i32 2, 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::setReg@75] %var6 = add i32 2, 0
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@214] line: 11,  Exp -> Exp BINOP Exp
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var7 = add i32 %var5, %var6
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@196] line: 11,  CommaMarker -> Epsilone
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@216] line: 11,  Exp -> ID
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: t
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetVar@266] Generating genGetVar commands
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var8 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetElementPtr@222] %var8 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var9 = load i32, i32* %var8
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@632] Register of t is: %var9
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@196] line: 11,  CommaMarker -> Epsilone
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@216] line: 11,  Exp -> ID
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: s
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetVar@266] Generating genGetVar commands
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var10 = getelementptr i32, i32* %frame_ptr, i32 1
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetElementPtr@222] %var10 = getelementptr i32, i32* %frame_ptr, i32 1
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var11 = load i32, i32* %var10
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var12 = trunc i32 %var11 to i8
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@632] Register of s is: %var12
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@222] line: 11,  Exp -> NUM B
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var13 = add i8 8, 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::setReg@75] %var13 = add i8 8, 0
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@214] line: 11,  Exp -> Exp BINOP Exp
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var14 = add i8 %var12, %var13
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@189] line: 11,  ExpList -> Exp
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@191] line: 11,  ExpList -> Exp COMMA ExpList
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@191] line: 11,  ExpList -> Exp COMMA ExpList
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@182] line: 11,  Call -> ID LPAREN ExpList RPAREN
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genCallFunc@329] Generating call function command of: Func
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: call void @Func(i32 %var7, i32 %var9, i8 %var14)
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@133] line: 11,  Statement -> Call SC
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@112] line: 11,  Statements -> Statements Statement
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@117] line: 13,  NextInstMarker -> Epsilone
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@220] line: 13,  Exp -> NUM
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: 14
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var15 = add i32 14, 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::setReg@75] %var15 = add i32 14, 0
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@196] line: 13,  CommaMarker -> Epsilone
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@216] line: 13,  Exp -> ID
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: t
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetVar@266] Generating genGetVar commands
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var16 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetElementPtr@222] %var16 = getelementptr i32, i32* %frame_ptr, i32 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var17 = load i32, i32* %var16
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@632] Register of t is: %var17
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@196] line: 13,  CommaMarker -> Epsilone
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@216] line: 13,  Exp -> ID
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@622] Exp -> *, * in {ID, NUM, STRING, TRUE, FALSE}: s
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetVar@266] Generating genGetVar commands
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var18 = getelementptr i32, i32* %frame_ptr, i32 1
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genGetElementPtr@222] %var18 = getelementptr i32, i32* %frame_ptr, i32 1
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var19 = load i32, i32* %var18
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var20 = trunc i32 %var19 to i8
2022-06-21 13:12:35.712 INFO  [40814] [Exp::Exp@632] Register of s is: %var20
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@222] line: 13,  Exp -> NUM B
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var21 = add i8 8, 0
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::setReg@75] %var21 = add i8 8, 0
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@214] line: 13,  Exp -> Exp BINOP Exp
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %var22 = add i8 %var20, %var21
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@189] line: 13,  ExpList -> Exp
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@191] line: 13,  ExpList -> Exp COMMA ExpList
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@191] line: 13,  ExpList -> Exp COMMA ExpList
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@182] line: 13,  Call -> ID LPAREN ExpList RPAREN
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::genCallFunc@329] Generating call function command of: Func
2022-06-21 13:12:35.712 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: call void @Func(i32 %var15, i32 %var17, i8 %var22)
2022-06-21 13:12:35.712 DEBUG [40814] [yyparse@133] line: 13,  Statement -> Call SC
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@112] line: 13,  Statements -> Statements Statement
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@79] line: 14,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: ret void
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: }

2022-06-21 13:12:35.713 INFO  [40814] [closeScope@84] Close scope in line: 14
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@87] line: 17,  RetType ->  VOID
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@92] line: 17,  Formals -> epsilon
2022-06-21 13:12:35.713 INFO  [40814] [openScope@60] Open scope in line: 17
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::genFuncDecl@164] Generaing function declaration: "main"
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: define void @main() {
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: %frame_ptr = alloca i32, i32 50
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: 
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@184] line: 18,  Call -> ID LPAREN RPAREN
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::genCallFunc@329] Generating call function command of: maxTestsPassMultipleParametersToFunc
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: call void @maxTestsPassMultipleParametersToFunc()
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@133] line: 18,  Statement -> Call SC
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@110] line: 18,  Statements -> Statement
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@79] line: 19,  FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: br label @
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: ret void
2022-06-21 13:12:35.713 INFO  [40814] [llvmGen::llvmEmit@143] Emitting command: }

2022-06-21 13:12:35.713 INFO  [40814] [closeScope@84] Close scope in line: 19
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@70] line: 20,  Funcs -> epsilon
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@72] line: 20,  Funcs -> FuncDecl Funcs
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@72] line: 20,  Funcs -> FuncDecl Funcs
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@72] line: 20,  Funcs -> FuncDecl Funcs
2022-06-21 13:12:35.713 DEBUG [40814] [yyparse@65] line: 20,  Program -> Funcs
2022-06-21 13:12:35.713 INFO  [40814] [endCompiler@34] Print global buffer
2022-06-21 13:12:35.713 INFO  [40814] [endCompiler@36] Print code buffer
2022-06-21 13:12:35.713 INFO  [40814] [closeScope@84] Close scope in line: 20
2022-06-21 13:12:35.713 INFO  [40814] [endCompiler@40] End compiler
